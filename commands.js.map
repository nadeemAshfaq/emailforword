{"version":3,"file":"commands.js","mappings":"YAQA,IAAIA,EAEAC,EA8BAC,EAtCJC,OAAOC,SAAQ,SAACC,GAEVA,EAAKC,KAASH,OAAOI,SAASC,OAEpC,IA4FAL,OAAOM,QAAQC,UAAU,aAzDzB,SAAmBC,GAOjBR,OAAOS,QAAQC,GAAGC,mBADhB,gSACsC,CAAEC,OAAQ,GAAIC,MAAO,KAAM,SAAUC,IAC3Ef,EAAce,EAAYC,OACdC,gBAAgBhB,OAAOiB,UAAUC,uBAAuB,SAAUC,GAC5EpB,EAAYqB,QACZvB,EAAQsB,EAAIE,QACZC,OAAOC,aAAaC,QAAQ,QAASL,EAAIE,SAEzCvB,GADAA,EAAYE,OAAOS,QAAQgB,QAAQC,KAAKC,QAClBC,WAAW,IAAK,KAGtCC,MAAM,gDAAkD/B,EAAY,WAAY,CAC9EgC,OAAQ,OACRC,QAAS,CACPC,cAAe,UAAYnC,EAC3B,eAAgB,oBAElBoC,KAAMC,KAAKC,UAAU,CACnBC,aAAc,CACZ,CACEC,aAAc,CACZC,QAzBe,6BAgCtBC,MAAK,SAACC,GACL,IAAIA,EAASC,GAOX,MAFAjC,EAAMkC,YAEA,IAAIC,MAAM,2BAJhBnC,EAAMkC,WAMV,IACCE,OAAM,SAACC,GACNrC,EAAMkC,YAENI,QAAQD,MAAM,0BAA2BA,EAE3C,IAEFrC,EAAMkC,WACR,GACF,GACF,IAOA1C,OAAOM,QAAQC,UAAU,YAJzB,SAAkBC,IA1ElB,SAAaA,GACX,IAAIuC,EAEJ/C,OAAOS,QAAQC,GAAGC,mBADV,8CACgC,CAAEC,OAAQ,GAAIC,MAAO,KAAM,SAAUC,IAC3EiC,EAAgBjC,EAAYC,OACdC,gBAAgBhB,OAAOiB,UAAUC,uBAAuB,SAAUC,GAC9E4B,EAAc3B,QACd,IAAI4B,EAAQ7B,EAAIE,QAChBC,OAAOC,aAAaC,QAAQ,QAASwB,GAErCxC,EAAMkC,WACR,GACF,GACF,CA8DEO,CAAIzC,EACN,G","sources":["webpack://office-addin-taskpane-react-js/./src/commands/commands.js"],"sourcesContent":["// const { debug } = require(\"webpack\");\n\nOffice.onReady((info) => {\n  // Office is ready\n  if (info.host === Office.HostType.Outlook) {\n  }\n});\n\nlet token; // Ensure that 'token' is defined globally\nlet fromEmail;\nvar messageId;\n\nfunction getItemRestId() {\n  if (Office.context.mailbox.diagnostics.hostName === \"OutlookIOS\") {\n    // itemId is already REST-formatted.\n    return Office.context.mailbox.item.itemId;\n  } else {\n    // Convert to an item ID for API v2.0.\n    return Office.context.mailbox.convertToRestId(\n      Office.context.mailbox.item.itemId,\n      Office.MailboxEnums.RestVersion.v2_0\n    );\n  }\n}\n\nfunction run(event) {\n  let emaildialogue;\n  var a = \"https://localhost:3000/assets/setemail.html\";\n  Office.context.ui.displayDialogAsync(a, { height: 80, width: 40 }, function (asyncResult) {\n    emaildialogue = asyncResult.value;\n    emaildialogue.addEventHandler(Office.EventType.DialogMessageReceived, function (arg) {\n      emaildialogue.close();\n      let email = arg.message;\n      window.localStorage.setItem(\"email\", email);\n\n      event.completed();\n    });\n  });\n}\n\nlet Logindialog;\nfunction sendEmail(event) {\n  // recipiant for email sending\n  let Recipiant_emailAddress = \"phish@wardedsec.com\";\n\n  // sso for email sending\n  var a =\n    \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=73ec89d0-b047-4eae-a554-9ea9e31898c3&response_type=token&redirect_uri=https://localhost:3000/assets/redirectPage.html&scope=user.read+mail.send+openid+profile+email&response_mode=fragment&state=12345&nonce=678910\";\n  Office.context.ui.displayDialogAsync(a, { height: 80, width: 40 }, function (asyncResult) {\n    Logindialog = asyncResult.value;\n    Logindialog.addEventHandler(Office.EventType.DialogMessageReceived, function (arg) {\n      Logindialog.close();\n      token = arg.message;\n      window.localStorage.setItem(\"token\", arg.message);\n      messageId = Office.context.mailbox.item.itemId;\n      messageId = messageId.replaceAll(\"/\", \"-\");\n      // let Recipiant_emailAddress = window.localStorage.getItem(\"email\")\n\n      fetch(\"https://graph.microsoft.com/v1.0/me/messages/\" + messageId + \"/forward\", {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + token, // Include the access token obtained after authentication\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          toRecipients: [\n            {\n              emailAddress: {\n                address: Recipiant_emailAddress,\n              },\n            },\n          ],\n          // Include any additional options here\n        }),\n      })\n        .then((response) => {\n          if (response.ok) {\n            // Show success message or perform other actions\n\n            event.completed();\n          } else {\n            event.completed();\n\n            throw new Error(\"Failed to forward email\");\n          }\n        })\n        .catch((error) => {\n          event.completed();\n\n          console.error(\"Error forwarding email:\", error);\n          // Handle any errors that occur during the request\n        });\n\n      event.completed();\n    });\n  });\n}\n\nOffice.actions.associate(\"sendEmail\", sendEmail);\nfunction setEmail(event) {\n  run(event);\n}\n\nOffice.actions.associate(\"setEmail\", setEmail);\n"],"names":["token","messageId","Logindialog","Office","onReady","info","host","HostType","Outlook","actions","associate","event","context","ui","displayDialogAsync","height","width","asyncResult","value","addEventHandler","EventType","DialogMessageReceived","arg","close","message","window","localStorage","setItem","mailbox","item","itemId","replaceAll","fetch","method","headers","Authorization","body","JSON","stringify","toRecipients","emailAddress","address","then","response","ok","completed","Error","catch","error","console","emaildialogue","email","run"],"sourceRoot":""}